from .models import order_form

def create_order(request):
    if request.method == 'POST':
        order = order_form()
        order.paintlevel = request.POST['paintlevel']
        order.paintnum = request.POST['paintnum']
        order.build = request.POST['build']
        order.base = request.POST['base']
        order.comments = request.POST['comments']
        order.basetype = request.POST['basetype']
        order.scheme = request.POST['scheme']
        order.adnum = request.POST['adnum']
        order.adfirstline = request.POST['adfirstline']
        order.adtown = request.POST['adtown']
        order.adpostcode = request.POST['adpostcode']
        order.user = request.user
        order.save()
        return redirect('order/payment.html')
    else:
        return render(request, 'order/createorder.html')


<select name="paintlevel">
            <option value="basic">Basic</option>
            <option value="tabletop">Table top</option>
            <option value="display">Display</option>
        </select><br>
        <input type="number" name="paintnum"><br>
        <input type="text" name="scheme"><br>
        <input type="text" name="comments"><br>
        Yes<input type="radio" name="build" value="0">
        No<input type="radio" name="build" value="1"><br>
        <select name="basetype">
            <option value="sand">Sand</option>
            <option value="mud">Mud</option>
            <option value="concrete">Concrete</option>
            <option value="grass">Grass</option>
            <option value="rubble">Rubble</option>
            <option value="snow">Snow</option>
            <option value="none">None</option>
        </select><br>
        <input type="number" name="adnum"><br>
        <input type="text" name="adfirstline"><br>
        <input type="text" name="adtown"><br>
        <input type="text" name="postcode"><br>
        <br>


from django import forms
from django.forms import ModelForm
from .models import order_form



 {{ form.as_p }}


 def create_order(request):
    form = orderform(request.POST or None)
    if form.is_valid():
        form.user = request.user
        form.save()
    
        return render(request, 'order/createorder.html', {"form": form})
    else:
        context ={
            'form':form }
        return render(request, 'order/createorder.html', context)


Paint_Choices = (
    ('basic','Basic'),
    ('tabletop', 'Table Top'),
    ('display','Display'),
)

Base_Choices = (
    ('sand','Sand'),
    ('mud', 'Mud'),
    ('concrete','Concrete'),
    ('grass','Grass'),
    ('rubble','Rubble'),
    ('snow','Snow'),
    ('none','None')
) 
class order_form(forms.Form):
    paintlevel = forms.ChoiceField(choices=Paint_Choices, initial='basic')
    paintnum = forms.IntegerField()
    build = forms.BooleanField()
    base = forms.BooleanField()
    comments = forms.CharField(max_length=2000)
    basetype = forms.ChoiceField(choices=Base_Choices, initial='none')
    scheme = forms.CharField(max_length=500, widget=forms.Textarea(
        attrs={
            "rows":20,
             "columns": 10
            }
            ))
    adnum = forms.CharField(max_length=60)
    adfirstline = forms.CharField(max_length=100)
    adtown = forms.CharField(max_length=70)
    adpostcode = forms.CharField(max_length=8)
    user = forms.ForeignKey(User, on_delete=models.CASCADE, widget=forms.HiddenInput())



    class orderform(forms.ModelForm):
    class Meta:
        model = order_form
        widgets = {'user': forms.HiddenInput()}
        fields = ['paintlevel', 'paintnum', 'build', 'base', 'comments', 'basetype',
         'scheme', 'adnum', 'adfirstline', 'adtown', 'adpostcode', 'user']


<form id="update{{ product.id }}" method="POST" action="{% url 'addtocart' product.id %}">
                    {% csrf_token %}
                    <a href="javascript:{document.getElementById('update{{ product.id }}').submit()}"><button class="btn btn-success ml-3">Add To Cart</button></a>
                    </form>

def add_to_cart(request, Products_id):
    item = get_object_or_404(Products, pk=Products_id)
    order_item = ProductItem.objects.create(product=item)
    orderdate = timezone.now()
    order = Order.objects.create(user=request.user, orderdate=orderdate)
    order.items.add(order_item)
    return redirect("products")


class ProductItem(models.Model):
    product = models.ForeignKey(Products, on_delete=models.CASCADE)
    quantity = models.IntegerField(default=1)
   


class Order(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    items = models.ManyToManyField(ProductItem)
    orderdate = models.DateTimeField(default=timezone.now)
    ordered = models.BooleanField(default=False)
    def __str__(self):
        return str(self.user)


path('addtocart/<int:Products_id>', views.add_to_cart, name="addtocart"),